_list_ssh_tunnels () {
    ps axu | grep -i 'ssh' | grep -Evi 'grep|ssh-agent'
}

_down_ssh_tunnels () {
    _list_ssh_tunnels | awk -F" " '{print $2}' | xargs -I {} /bin/kill {}
}

_up_ssh_tunnels () {
    create_ssh_local_tunel 4444 10.18.42.1:4444
    create_ssh_local_tunel 1443:10.18.42.43:443
    create_ssh_local_tunel 2443:10.18.42.44:443
    create_ssh_local_tunel 3443:10.18.42.203:8006
    create_ssh_local_tunel 4443:10.18.42.207:8006
    create_ssh_local_tunel 5443:10.18.42.29:443
}

sshpr () {
    ssh -J $SSH_PROXY $@
}

create_ssh_local_tunel () {
    local local_port=${1}
    local remote_addr_port=${2}
    local proxy_server=${3:-${SSH_PROXY}}
    local ssh_proxy_cmd="ssh -o StrictHostKeyChecking=no \
                             -o ControlMaster=no \
                             -o ServerAliveInterval=60 \
                             -o ExitOnForwardFailure=yes \
                             -nfCNT"

    ${ssh_proxy_cmd} -L 127.0.0.1:${local_port}:${remote_addr_port} ${proxy_server}
    
    unset local_port remote_addr_port proxy_server ssh_proxy_cmd
}

fnmap () { 
    nmap -p- -sC -sV -A --min-rate=400 --min-parallelism=512 -vv $1
}

aws_config () {
    read -s -p 'AWS_ACCESS_KEY_ID: ' AWS_ACCESS_KEY_ID
    echo -e
    read -s -p 'AWS_SECRET_ACCESS_KEY: ' AWS_SECRET_ACCESS_KEY
    export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
    export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
    export AWS_DEFAULT_REGION=me-south-1
}

_wfport () {
    local host=$1
    local port=$2

    while ! /usr/bin/nc -zw3 $host $port > /dev/null 2>&1; do sleep 3; done
    echo -e "Address $host:$port available."

    unset host port
}
